name: Test

on: push

jobs:
  Rubocop:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6.0
      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get -yqq install libsqlite3-dev sqlite3
      - name: Cache ruby gems
        uses: actions/cache@v2
        env:
          cache-name: cache-ruby-gems
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-
      - name: Install dependencies
        run: bundle install --jobs 4 --retry 3 --deployment
      - name: Run
        run: bundle exec rubocop lib/
  Test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6.0
      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get -yqq install libsqlite3-dev sqlite3 ghostscript gsfonts
      - name: Cache ruby gems
        uses: actions/cache@v2
        env:
          cache-name: cache-ruby-gems
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-
      - name: Install dependencies
        run: bundle install --jobs 4 --retry 3 --deployment
      - name: Run
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        run: bundle exec bin/test
  Coverage:
    needs: [ test ]
    name: coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@master
        with:
          node-version: '12'
      - run: npm install -g yarn
      - run: yarn install
      - run: yarn build
      - uses: paambaati/codeclimate-action@v2.2.4
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        with:
          coverageCommand: yarn coverage